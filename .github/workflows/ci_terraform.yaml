name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.12.24
        tf_actions_working_dir: 'terraform' 
        tf_actions_subcommand: 'init'
        tf_actions_comment: true    
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
      
    - name: Terraform fmt
      uses: hashicorp/terraform-github-actions@master
      id: fmt
      continue-on-error: true
      with:
        tf_actions_version: 0.12.24
        tf_actions_working_dir: 'terraform' 
        tf_actions_subcommand: 'fmt'
        tf_actions_comment: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      

    - name: Terraform Validate
      uses: hashicorp/terraform-github-actions@master
      id: validate
      with:
        tf_actions_version: 0.12.24
        tf_actions_working_dir: 'terraform' 
        tf_actions_subcommand: 'validate'
        tf_actions_comment: true 
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
        
    - name: Terraform Plan
      uses: hashicorp/terraform-github-actions@master
      id: plan
      with:
        tf_actions_version: 0.12.24
        tf_actions_working_dir: 'terraform' 
        tf_actions_subcommand: 'plan'
        tf_actions_comment: true 
      continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
        TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - uses: actions/github-script@v2
      name: Runs only on pull request
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.MY_GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`${process.env.PLAN}\`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`,  Workflow: \`${{ github.workflow }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    #   run: terraform apply -auto-approve